Data structure, all focussed on being able to roughly replicate the CAT damage breakdown tab

tableArray: Holds all the entities, including players 
playerDict: Dictionary of contents of playerID, enter playerID (player ID is directly taken from the combatlog string; example: P[8665825@19965130 Arya@rangerrenze#6027])
can check for player by looking at the first letter of the string, or playersInstance.isPlayer (booolean)

Non pet damage
3d array
1st dimension are all the weapons/abilities
2nd dimension are at [0] the summary of that weapon (marked with target: "global"), and then afterwards an instance for each target to which damage is dealt
3d dimension are the stats for that weapon/to that target 
dmgoutIndex = {"name": 0, "target": 1, "damage": 2, "DPS": 3, "maxHit": 4, "crits": 5, "flanks": 6, "attacks": 7, "misses": 8, "CrtH": 9, "acc": 10, "flankrate": 11, "kills": 12, "hulldamage": 13, "shielddamage": 14, "resists": 15}
There currently is a dict updated for the 1st dimension, so each weapon. I can "easily" add a dict for the targets

pet damage
(yeah this is a bit more of a mess)
5d array (4d of specific data, 5th dimension again the stats)
1st dimension is all grouped pets
for 2nd/3d/4th dimension [0] always gives the grouped stats for the previous level
so petDMGTable[groupedPet][0] gives the overall stats for that grouped pet 
2nd dimension are unique pets
so petDMGTable[groupedPet][uniquePet][0] gives the overall stats for that pet
3d dimension are the weapons for that pet
because multiple instances of the same weapon, works with weaponID which is formed off uniquePet + weapon
so petDMGTable[groupedPet][uniquePet][weaponID][0] gives the overall stats for that weapon
and then the last dimension are the targets each weapon deals damage to 
again with a targetID which is uniquePet + weapon + target
so petDMGTable[groupedPet][uniquePet][weaponID][targetID] (for this the 0 is not needed)
all of the above return the same stats array as for non pets, so can use the same dictionary to read it


damage in/tank stats
same as non pet damage
except it's sorted by source (so player/enemy dealing the damage) on the 1st dimension, and weapon on the 2nd dimension, as done in CAT


Healing is build up of the exact 3 same tables
non pet heals out
pet heals out
heals in
and the formatting is the same, except the stats arrays are build up differently
healOutIndex = {"name": 0, "target": 1, "healtotal": 2, "HPS": 3, "hullheal": 4, "shieldheal": 5, "maxHeal": 6, "Crits": 7, "healticks": 8, "CrtH": 9 }	

For the pet breakdown 
there are dicts with all the information
so you can do:
attacker.petDMGTable[attacker.petSourceDict[source]][attacker.petSourceIDDict[sourceID]][attacker.petWeaponDict[weaponID]][attacker.petTargetDict[targetID]][attacker.dmgoutindex["hulldamage"]] += hulldamage